##this is an example deployment.yaml that should be customized in order to meet the configuration for app k8s deployment

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.service.name }} 
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}" 
    visualize: "true" 
    app: {{ .Values.service.name }} 
spec:
  replicas: {{ .Values.replicaCount }} 
  selector: 
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        visualize: "true" 
    spec:
      containers: 
      - name: {{ .Values.service.name }} 
        image: "{{ .Values.image.repository }}:{{ .Chart.Version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env: 
        - name: PORT
          value: "8080"
        - name: VULCAN_ADDR
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: kafka.proxy.url.with.protocol
        - name: GROUP_ID
          value: "RedConcepts"
        - name: TOPIC
          value: "Concept"
        - name: SERVICES
          value: "http://content-rw-neo4j:8080,http://people-rw-neo4j:8080,http://organisations-rw-neo4j:8080,http://memberships-rw-neo4j:8080,http://brands-rw-neo4j:8080,http://roles-rw-neo4j:8080,http://financial-instruments-rw-neo4j:8080,http://industry-classifications-rw-neo4j:8080"
        - name: ELASTICSEARCH_WRITER
          value: "http://concept-rw-elasticsearch:8080"
        - name: GRAPHITE_TCP_AUTHORITY
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: graphite.address
        - name: GRAPHITE_PREFIX
          value: "coco.services.k8s.concept-ingester"
        - name: OFFSET
          value: "largest"
        - name: COMMIT_ENABLE
          value: "true"
        - name: STREAM_COUNT
          value: "1"
        - name: TIMEOUT
          value: "60"
        ports: 
        - containerPort: 8080 
        livenessProbe: 
          tcpSocket: 
            port: 8080 
          initialDelaySeconds: 5 
        readinessProbe: 
          httpGet: 
            port: 8080 
            path: "/__gtg" 
          initialDelaySeconds: 15 
          periodSeconds: 30 
        resources: 
{{ toYaml .Values.resources | indent 12 }}

